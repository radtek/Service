/* soapStub.h
   Generated by gSOAP 2.8.34 for service.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/


#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20834
# error "GSOAP VERSION 20834 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

struct SOAP_ENC__base64;	/* service.h:10 */
struct ns__TempleFiles;	/* service.h:14 */
struct ns__TempleMatchPARA;	/* service.h:21 */
struct ns__TempleMatchOUT;	/* service.h:26 */
struct ns__CCalibrationXYZNewPARA;	/* service.h:34 */
struct ns__CCalibrationXYZNewOUT;	/* service.h:39 */
struct ns__getFileServiceResponse;	/* service.h:43 */
struct ns__getFileService;	/* service.h:43 */
struct ns__TempleMatchService;	/* service.h:44 */
struct ns__getCCalibrationXYZFileResponse;	/* service.h:47 */
struct ns__getCCalibrationXYZFile;	/* service.h:47 */
struct ns__CCalibrationXYZNewService;	/* service.h:48 */

/* service.h:10 */
#ifndef SOAP_TYPE_SOAP_ENC__base64
#define SOAP_TYPE_SOAP_ENC__base64 (7)
/* base64Binary XSD type: */
struct SOAP_ENC__base64 {
      public:
        unsigned char *__ptr;
        int __size;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENC__base64 */
        int soap_type() const { return SOAP_TYPE_SOAP_ENC__base64; }
        /** Constructor with member initializations */
        SOAP_ENC__base64()
        {
          __ptr = (unsigned char *)0;
          __size = (int)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENC__base64(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENC__base64 * SOAP_FMAC2 soap_instantiate_SOAP_ENC__base64(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* service.h:14 */
#ifndef SOAP_TYPE_ns__TempleFiles
#define SOAP_TYPE_ns__TempleFiles (11)
/* complex XSD type 'ns:TempleFiles': */
struct ns__TempleFiles {
      public:
        /** Required element 'image' of XSD type 'SOAP-ENC:base64' */
        struct SOAP_ENC__base64 image;
        /** Required element 'image2' of XSD type 'SOAP-ENC:base64' */
        struct SOAP_ENC__base64 image2;
        /** Required element 'image3' of XSD type 'SOAP-ENC:base64' */
        struct SOAP_ENC__base64 image3;
        /** Required element 'matchTemPlate' of XSD type 'SOAP-ENC:base64' */
        struct SOAP_ENC__base64 matchTemPlate;
        /** Required element 'tplgray' of XSD type 'SOAP-ENC:base64' */
        struct SOAP_ENC__base64 tplgray;
      public:
        /** Return unique type id SOAP_TYPE_ns__TempleFiles */
        int soap_type() const { return SOAP_TYPE_ns__TempleFiles; }
        /** Constructor with member initializations */
        ns__TempleFiles()
        {
        }
        /** Friend allocator used by soap_new_ns__TempleFiles(struct soap*, int) */
        friend SOAP_FMAC1 ns__TempleFiles * SOAP_FMAC2 soap_instantiate_ns__TempleFiles(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* service.h:21 */
#ifndef SOAP_TYPE_ns__TempleMatchPARA
#define SOAP_TYPE_ns__TempleMatchPARA (12)
/* complex XSD type 'ns:TempleMatchPARA': */
struct ns__TempleMatchPARA {
      public:
        /** Required element 'imggray' of XSD type 'SOAP-ENC:base64' */
        struct SOAP_ENC__base64 imggray;
        /** Required element 'widthImg' of XSD type 'xsd:int' */
        int widthImg;
        /** Required element 'heightImg' of XSD type 'xsd:int' */
        int heightImg;
      public:
        /** Return unique type id SOAP_TYPE_ns__TempleMatchPARA */
        int soap_type() const { return SOAP_TYPE_ns__TempleMatchPARA; }
        /** Constructor with member initializations */
        ns__TempleMatchPARA()
        {
          widthImg = (int)0;
          heightImg = (int)0;
        }
        /** Friend allocator used by soap_new_ns__TempleMatchPARA(struct soap*, int) */
        friend SOAP_FMAC1 ns__TempleMatchPARA * SOAP_FMAC2 soap_instantiate_ns__TempleMatchPARA(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* service.h:26 */
#ifndef SOAP_TYPE_ns__TempleMatchOUT
#define SOAP_TYPE_ns__TempleMatchOUT (13)
/* complex XSD type 'ns:TempleMatchOUT': */
struct ns__TempleMatchOUT {
      public:
        /** Required element 'fcosts' of XSD type 'Array20Offloat' */
        float fcosts[20];
        /** Required element 'fCenterCoordsX' of XSD type 'Array20Offloat' */
        float fCenterCoordsX[20];
        /** Required element 'fCenterCoordsY' of XSD type 'Array20Offloat' */
        float fCenterCoordsY[20];
        /** Required element 'fangles' of XSD type 'Array20Offloat' */
        float fangles[20];
        /** Required element 'ftempScales' of XSD type 'Array20Offloat' */
        float ftempScales[20];
        /** Required element 'ioutNumber' of XSD type 'xsd:int' */
        int ioutNumber;
      public:
        /** Return unique type id SOAP_TYPE_ns__TempleMatchOUT */
        int soap_type() const { return SOAP_TYPE_ns__TempleMatchOUT; }
        /** Constructor with member initializations */
        ns__TempleMatchOUT()
        {
          for (int i = 0; i < 20; i++)
            fcosts[i] = (float)0;
          for (int i = 0; i < 20; i++)
            fCenterCoordsX[i] = (float)0;
          for (int i = 0; i < 20; i++)
            fCenterCoordsY[i] = (float)0;
          for (int i = 0; i < 20; i++)
            fangles[i] = (float)0;
          for (int i = 0; i < 20; i++)
            ftempScales[i] = (float)0;
          ioutNumber = (int)0;
        }
        /** Friend allocator used by soap_new_ns__TempleMatchOUT(struct soap*, int) */
        friend SOAP_FMAC1 ns__TempleMatchOUT * SOAP_FMAC2 soap_instantiate_ns__TempleMatchOUT(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* service.h:34 */
#ifndef SOAP_TYPE_ns__CCalibrationXYZNewPARA
#define SOAP_TYPE_ns__CCalibrationXYZNewPARA (16)
/* complex XSD type 'ns:CCalibrationXYZNewPARA': */
struct ns__CCalibrationXYZNewPARA {
      public:
        /** Required element 'srcTriX' of XSD type 'Array20Offloat' */
        float srcTriX[20];
        /** Required element 'srcTriY' of XSD type 'Array20Offloat' */
        float srcTriY[20];
        /** Required element 'number' of XSD type 'xsd:int' */
        int number;
      public:
        /** Return unique type id SOAP_TYPE_ns__CCalibrationXYZNewPARA */
        int soap_type() const { return SOAP_TYPE_ns__CCalibrationXYZNewPARA; }
        /** Constructor with member initializations */
        ns__CCalibrationXYZNewPARA()
        {
          for (int i = 0; i < 20; i++)
            srcTriX[i] = (float)0;
          for (int i = 0; i < 20; i++)
            srcTriY[i] = (float)0;
          number = (int)0;
        }
        /** Friend allocator used by soap_new_ns__CCalibrationXYZNewPARA(struct soap*, int) */
        friend SOAP_FMAC1 ns__CCalibrationXYZNewPARA * SOAP_FMAC2 soap_instantiate_ns__CCalibrationXYZNewPARA(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* service.h:39 */
#ifndef SOAP_TYPE_ns__CCalibrationXYZNewOUT
#define SOAP_TYPE_ns__CCalibrationXYZNewOUT (17)
/* complex XSD type 'ns:CCalibrationXYZNewOUT': */
struct ns__CCalibrationXYZNewOUT {
      public:
        /** Required element 'CalibrationX' of XSD type 'Array20Offloat' */
        float CalibrationX[20];
        /** Required element 'CalibrationY' of XSD type 'Array20Offloat' */
        float CalibrationY[20];
      public:
        /** Return unique type id SOAP_TYPE_ns__CCalibrationXYZNewOUT */
        int soap_type() const { return SOAP_TYPE_ns__CCalibrationXYZNewOUT; }
        /** Constructor with member initializations */
        ns__CCalibrationXYZNewOUT()
        {
          for (int i = 0; i < 20; i++)
            CalibrationX[i] = (float)0;
          for (int i = 0; i < 20; i++)
            CalibrationY[i] = (float)0;
        }
        /** Friend allocator used by soap_new_ns__CCalibrationXYZNewOUT(struct soap*, int) */
        friend SOAP_FMAC1 ns__CCalibrationXYZNewOUT * SOAP_FMAC2 soap_instantiate_ns__CCalibrationXYZNewOUT(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* service.h:43 */
#ifndef SOAP_TYPE_ns__getFileServiceResponse
#define SOAP_TYPE_ns__getFileServiceResponse (20)
/* complex XSD type 'ns:getFileServiceResponse': */
struct ns__getFileServiceResponse {
      public:
        /** Required element 'result' of XSD type 'xsd:int' */
        int result;
      public:
        /** Return unique type id SOAP_TYPE_ns__getFileServiceResponse */
        int soap_type() const { return SOAP_TYPE_ns__getFileServiceResponse; }
        /** Constructor with member initializations */
        ns__getFileServiceResponse()
        {
          result = (int)0;
        }
        /** Friend allocator used by soap_new_ns__getFileServiceResponse(struct soap*, int) */
        friend SOAP_FMAC1 ns__getFileServiceResponse * SOAP_FMAC2 soap_instantiate_ns__getFileServiceResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* service.h:43 */
#ifndef SOAP_TYPE_ns__getFileService
#define SOAP_TYPE_ns__getFileService (21)
/* complex XSD type 'ns:getFileService': */
struct ns__getFileService {
      public:
        /** Required element 'in' of XSD type 'ns:TempleFiles' */
        struct ns__TempleFiles in;
      public:
        /** Return unique type id SOAP_TYPE_ns__getFileService */
        int soap_type() const { return SOAP_TYPE_ns__getFileService; }
        /** Constructor with member initializations */
        ns__getFileService()
        {
        }
        /** Friend allocator used by soap_new_ns__getFileService(struct soap*, int) */
        friend SOAP_FMAC1 ns__getFileService * SOAP_FMAC2 soap_instantiate_ns__getFileService(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* service.h:44 */
#ifndef SOAP_TYPE_ns__TempleMatchService
#define SOAP_TYPE_ns__TempleMatchService (24)
/* complex XSD type 'ns:TempleMatchService': */
struct ns__TempleMatchService {
      public:
        /** Required element 'inPara' of XSD type 'ns:TempleMatchPARA' */
        struct ns__TempleMatchPARA inPara;
      public:
        /** Return unique type id SOAP_TYPE_ns__TempleMatchService */
        int soap_type() const { return SOAP_TYPE_ns__TempleMatchService; }
        /** Constructor with member initializations */
        ns__TempleMatchService()
        {
        }
        /** Friend allocator used by soap_new_ns__TempleMatchService(struct soap*, int) */
        friend SOAP_FMAC1 ns__TempleMatchService * SOAP_FMAC2 soap_instantiate_ns__TempleMatchService(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* service.h:47 */
#ifndef SOAP_TYPE_ns__getCCalibrationXYZFileResponse
#define SOAP_TYPE_ns__getCCalibrationXYZFileResponse (26)
/* complex XSD type 'ns:getCCalibrationXYZFileResponse': */
struct ns__getCCalibrationXYZFileResponse {
      public:
        /** Required element 'result' of XSD type 'xsd:int' */
        int result;
      public:
        /** Return unique type id SOAP_TYPE_ns__getCCalibrationXYZFileResponse */
        int soap_type() const { return SOAP_TYPE_ns__getCCalibrationXYZFileResponse; }
        /** Constructor with member initializations */
        ns__getCCalibrationXYZFileResponse()
        {
          result = (int)0;
        }
        /** Friend allocator used by soap_new_ns__getCCalibrationXYZFileResponse(struct soap*, int) */
        friend SOAP_FMAC1 ns__getCCalibrationXYZFileResponse * SOAP_FMAC2 soap_instantiate_ns__getCCalibrationXYZFileResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* service.h:47 */
#ifndef SOAP_TYPE_ns__getCCalibrationXYZFile
#define SOAP_TYPE_ns__getCCalibrationXYZFile (27)
/* complex XSD type 'ns:getCCalibrationXYZFile': */
struct ns__getCCalibrationXYZFile {
      public:
        /** Required element 'inFile' of XSD type 'SOAP-ENC:base64' */
        struct SOAP_ENC__base64 inFile;
      public:
        /** Return unique type id SOAP_TYPE_ns__getCCalibrationXYZFile */
        int soap_type() const { return SOAP_TYPE_ns__getCCalibrationXYZFile; }
        /** Constructor with member initializations */
        ns__getCCalibrationXYZFile()
        {
        }
        /** Friend allocator used by soap_new_ns__getCCalibrationXYZFile(struct soap*, int) */
        friend SOAP_FMAC1 ns__getCCalibrationXYZFile * SOAP_FMAC2 soap_instantiate_ns__getCCalibrationXYZFile(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* service.h:48 */
#ifndef SOAP_TYPE_ns__CCalibrationXYZNewService
#define SOAP_TYPE_ns__CCalibrationXYZNewService (30)
/* complex XSD type 'ns:CCalibrationXYZNewService': */
struct ns__CCalibrationXYZNewService {
      public:
        /** Required element 'inPara' of XSD type 'ns:CCalibrationXYZNewPARA' */
        struct ns__CCalibrationXYZNewPARA inPara;
      public:
        /** Return unique type id SOAP_TYPE_ns__CCalibrationXYZNewService */
        int soap_type() const { return SOAP_TYPE_ns__CCalibrationXYZNewService; }
        /** Constructor with member initializations */
        ns__CCalibrationXYZNewService()
        {
        }
        /** Friend allocator used by soap_new_ns__CCalibrationXYZNewService(struct soap*, int) */
        friend SOAP_FMAC1 ns__CCalibrationXYZNewService * SOAP_FMAC2 soap_instantiate_ns__CCalibrationXYZNewService(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* service.h:48 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (31)
/* SOAP_ENV__Header: */
struct SOAP_ENV__Header {
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Header */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header()
        {
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Header(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* service.h:48 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (32)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_ENV__Code {
      public:
        /** Optional element 'SOAP-ENV:Value' of XSD type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Code */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code()
        {
          SOAP_ENV__Value = (char *)0;
          SOAP_ENV__Subcode = (struct SOAP_ENV__Code *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Code(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* service.h:48 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (34)
/* SOAP_ENV__Detail: */
struct SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_T assigned to __type */
        /** Do not create a cyclic data structure throught this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Detail */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail()
        {
          __any = (char *)0;
          __type = 0;
          fault = NULL;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Detail(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* service.h:48 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (37)
/* SOAP_ENV__Reason: */
struct SOAP_ENV__Reason {
      public:
        /** Optional element 'SOAP-ENV:Text' of XSD type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Reason */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason()
        {
          SOAP_ENV__Text = (char *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Reason(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* service.h:48 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (38)
/* SOAP_ENV__Fault: */
struct SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XSD type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XSD type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XSD type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XSD type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XSD type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XSD type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Fault */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault()
        {
          faultcode = (char *)0;
          faultstring = (char *)0;
          faultactor = (char *)0;
          detail = (struct SOAP_ENV__Detail *)0;
          SOAP_ENV__Code = (struct SOAP_ENV__Code *)0;
          SOAP_ENV__Reason = (struct SOAP_ENV__Reason *)0;
          SOAP_ENV__Node = (char *)0;
          SOAP_ENV__Role = (char *)0;
          SOAP_ENV__Detail = (struct SOAP_ENV__Detail *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Fault(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* service.h:9 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

/* service.h:9 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* float has binding name 'float' for type 'xsd:float' */
#ifndef SOAP_TYPE_float
#define SOAP_TYPE_float (14)
#endif

/* unsigned char has binding name 'unsignedByte' for type 'xsd:unsignedByte' */
#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (9)
#endif

/* unsigned int has binding name 'unsignedInt' for type 'xsd:unsignedInt' */
#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (8)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (38)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (37)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (34)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (32)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (31)
#endif

/* struct ns__CCalibrationXYZNewService has binding name 'ns__CCalibrationXYZNewService' for type 'ns:CCalibrationXYZNewService' */
#ifndef SOAP_TYPE_ns__CCalibrationXYZNewService
#define SOAP_TYPE_ns__CCalibrationXYZNewService (30)
#endif

/* struct ns__getCCalibrationXYZFile has binding name 'ns__getCCalibrationXYZFile' for type 'ns:getCCalibrationXYZFile' */
#ifndef SOAP_TYPE_ns__getCCalibrationXYZFile
#define SOAP_TYPE_ns__getCCalibrationXYZFile (27)
#endif

/* struct ns__getCCalibrationXYZFileResponse has binding name 'ns__getCCalibrationXYZFileResponse' for type 'ns:getCCalibrationXYZFileResponse' */
#ifndef SOAP_TYPE_ns__getCCalibrationXYZFileResponse
#define SOAP_TYPE_ns__getCCalibrationXYZFileResponse (26)
#endif

/* struct ns__TempleMatchService has binding name 'ns__TempleMatchService' for type 'ns:TempleMatchService' */
#ifndef SOAP_TYPE_ns__TempleMatchService
#define SOAP_TYPE_ns__TempleMatchService (24)
#endif

/* struct ns__getFileService has binding name 'ns__getFileService' for type 'ns:getFileService' */
#ifndef SOAP_TYPE_ns__getFileService
#define SOAP_TYPE_ns__getFileService (21)
#endif

/* struct ns__getFileServiceResponse has binding name 'ns__getFileServiceResponse' for type 'ns:getFileServiceResponse' */
#ifndef SOAP_TYPE_ns__getFileServiceResponse
#define SOAP_TYPE_ns__getFileServiceResponse (20)
#endif

/* struct ns__CCalibrationXYZNewOUT has binding name 'ns__CCalibrationXYZNewOUT' for type 'ns:CCalibrationXYZNewOUT' */
#ifndef SOAP_TYPE_ns__CCalibrationXYZNewOUT
#define SOAP_TYPE_ns__CCalibrationXYZNewOUT (17)
#endif

/* struct ns__CCalibrationXYZNewPARA has binding name 'ns__CCalibrationXYZNewPARA' for type 'ns:CCalibrationXYZNewPARA' */
#ifndef SOAP_TYPE_ns__CCalibrationXYZNewPARA
#define SOAP_TYPE_ns__CCalibrationXYZNewPARA (16)
#endif

/* struct ns__TempleMatchOUT has binding name 'ns__TempleMatchOUT' for type 'ns:TempleMatchOUT' */
#ifndef SOAP_TYPE_ns__TempleMatchOUT
#define SOAP_TYPE_ns__TempleMatchOUT (13)
#endif

/* struct ns__TempleMatchPARA has binding name 'ns__TempleMatchPARA' for type 'ns:TempleMatchPARA' */
#ifndef SOAP_TYPE_ns__TempleMatchPARA
#define SOAP_TYPE_ns__TempleMatchPARA (12)
#endif

/* struct ns__TempleFiles has binding name 'ns__TempleFiles' for type 'ns:TempleFiles' */
#ifndef SOAP_TYPE_ns__TempleFiles
#define SOAP_TYPE_ns__TempleFiles (11)
#endif

/* struct SOAP_ENC__base64 has binding name 'SOAP_ENC__base64' for type 'SOAP-ENC:base64' */
#ifndef SOAP_TYPE_SOAP_ENC__base64
#define SOAP_TYPE_SOAP_ENC__base64 (7)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (40)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (39)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (33)
#endif

/* unsigned char * has binding name 'PointerTounsignedByte' for type 'xsd:unsignedByte' */
#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (10)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/* float[20] has binding name 'Array20Offloat' for type 'xsd:float' */
#ifndef SOAP_TYPE_Array20Offloat
#define SOAP_TYPE_Array20Offloat (15)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
